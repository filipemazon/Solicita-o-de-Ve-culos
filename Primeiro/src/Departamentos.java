/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author filipe.nisis
 */
public class Departamentos extends javax.swing.JFrame {

    /**
     * Creates new form Departamentos
     */
    public Departamentos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Departamentos");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {" Coordenadoria Municipal do Sistema de Atenção às Urgências ", "3"},
                {"Diretoria de Acompanhamento de Contratos e Convênios ", "19"},
                {"Diretoria de Assistência Farmacêutica ", "24"},
                {"Diretoria de Atenção Hospitalar ", "5"},
                {"Diretoria de Atenção Pré-hospitalar ", "4"},
                {"Diretoria de Controle e Zoonose ", "15"},
                {"Diretoria de Controle Financeiro ", "18"},
                {"Diretoria de Dietas e Nutrição ", "26"},
                {"Diretoria de Gestão de Medicamentos e Insumos ", "25"},
                {"Diretoria de Inspeção de Carnes e Derivados ", "13"},
                {"Diretoria de Laboratório ", "21"},
                {"Diretoria de Marcação de Consultas e Exames ", "31"},
                {"Diretoria de Material e Equipamentos ", "28"},
                {"Diretoria de Medicina Legal e Verificação de Óbito ", "14"},
                {"Diretoria de Planejamento ", "17"},
                {"Diretoria de Práticas Integrativas Complementrares ", "8"},
                {"Diretoria de Saúde Bucal ", "36"},
                {"Diretoria de Saúde do Trabalhador ", "12"},
                {"Diretoria de Saúde Mental ", "34"},
                {"Diretoria de Transportes Internos  ", "27"},
                {"Diretoria de Tratamento Fora Domicilio ", "30"},
                {"Diretoria de Unidades de Saúde ", "7"},
                {"Diretoria de Vigilância Epidemiológica ", "10"},
                {"Diretoria de Vigilância Sanitária ", "11"},
                {"Diretoria para Coordenação de Programas Especiais de Doenças Infectocontagiosas ", "22"},
                {"Ouvidoria da Secretaria Municipal da Saúde ", "6"},
                {"Superintendencia de Administracao em Saude ", "1"},
                {"Superintendência de Ações em Saúde", "2"},
                {"Superintendência de Assessoria Jurídica ", "38"},
                {"Superintendência de Assistência Farmacêutica ", "23"},
                {"Superintendência de Centro de Reabilitação ", "37"},
                {"Superintendência de Planejamento em Saúde ", "16"},
                {"Superintendência de Policlínica ", "20"},
                {"Superintendência de Regulação ", "29"},
                {"Superintendência de Saúde Bucal ", "35"},
                {"Superintendência de Saúde Mental ", "33"},
                {"Superintendência de Vigilância em Saúde ", "9"},
                {"Superintendência do Centro de Referência Integrado Viva Vida Hiperdia ", "32"},
                {null, null},
                {null, null}
            },
            new String [] {
                "Departamento", "Código"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(400);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(20);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Departamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Departamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Departamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Departamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Departamentos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
